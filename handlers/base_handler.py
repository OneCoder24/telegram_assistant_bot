# handlers/base_handler.py
from logger_config import get_logger
from modules.notes import get_all_notes, format_notes_list
from modules.tasks import get_all_tasks, format_tasks_list # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è –∑–∞–¥–∞—á
from modules.reminders import get_all_reminders, format_reminders_list # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
from modules.weather import get_formatted_current_weather # <-- –î–û–ë–ê–í–õ–ï–ù–û
from handlers.notes_handler import handle_notes_callback, handle_notes_message_input
from handlers.tasks_handler import handle_tasks_callback, handle_tasks_message_input # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–¥–∞—á
from handlers.reminders_handler import handle_reminders_callback, handle_reminders_message_input # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
from database import get_db

logger = get_logger()
db = get_db()

def handle_main_menu_reply(chat_id, user_id, text, user_states):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ reply-–∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è (user_id, chat_id) –∫–∞–∫ –∫–ª—é—á
    # –¢–∞–∫–∂–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    temp_text_key_add = (user_id, chat_id, 'temp_task_text_for_add')
    current_state = user_states.pop((user_id, chat_id), None)
    temp_text = user_states.pop(temp_text_key_add, None)
    if current_state:
        logger.info(f"–î–µ–π—Å—Ç–≤–∏–µ {current_state} –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} —á–µ—Ä–µ–∑ reply-–∫–Ω–æ–ø–∫—É.")
    if temp_text:
        logger.info(f"–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ ({temp_text}) —Å–±—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} —á–µ—Ä–µ–∑ reply-–∫–Ω–æ–ø–∫—É.")

    # --- –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è ---
    if text == "üìù –ó–∞–º–µ—Ç–∫–∏":
        notes = get_all_notes(user_id)
        notes_text = format_notes_list(notes)
        return notes_text, "notes_keyboard"
    elif text == "‚úÖ –ó–∞–¥–∞—á–∏": # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        tasks = get_all_tasks(user_id)
        tasks_text = format_tasks_list(tasks)
        return tasks_text, "tasks_keyboard"
    elif text == "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è": # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        reminders = get_all_reminders(user_id)
        reminders_text = format_reminders_list(reminders)
        return reminders_text, "reminders_keyboard"
    elif text == "üå§Ô∏è –ü–æ–≥–æ–¥–∞": # <-- –î–û–ë–ê–í–õ–ï–ù–û
        import asyncio
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π event loop –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ—Ç–æ–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        # –í handlers/base_handler.py —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —Å–∞–º–∞—è –ª—É—á—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞,
        # –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫. –í production –ª—É—á—à–µ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É.
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        try:
            weather_text = loop.run_until_complete(get_formatted_current_weather(user_id))
        finally:
            loop.close()
        return weather_text, "weather_keyboard"
    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        return "–ú–æ–¥—É–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–∑–∞–≥–ª—É—à–∫–∞).", "settings_keyboard"

    return None, None # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç

def handle_callback_query(callback_query, user_states, user_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback_query, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—è –ø–æ –º–æ–¥—É–ª—è–º."""
    data = callback_query["data"]
    chat_id = callback_query["message"]["chat"]["id"]
    message_id = callback_query["message"]["message_id"]
    # user_id = callback_query["from"]["id"] # <-- –£–ë–†–ê–ù–û, —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç

    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback_query –æ—Ç {user_id}: {data}")

    # –ï—Å–ª–∏ callback_data –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–∞–º–µ—Ç–∫–∞–º, –ø–µ—Ä–µ–¥–∞—ë–º –≤ notes_handler
    if data.startswith(("edit_note_", "delete_note_", "add_note_prompt", "notes_menu")):
        return "notes", data

    # –ï—Å–ª–∏ callback_data –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∑–∞–¥–∞—á–∞–º, –ø–µ—Ä–µ–¥–∞—ë–º –≤ tasks_handler
    if data.startswith(("edit_task_", "keep_current_text_", "keep_current_deadline_", "toggle_task_status_", "delete_task_", "add_task_prompt", "tasks_menu")): # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        return "tasks", data

    # –ï—Å–ª–∏ callback_data –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º, –ø–µ—Ä–µ–¥–∞—ë–º –≤ reminders_handler
    if data.startswith(("toggle_reminder_type_", "delete_reminder_", "add_reminder_prompt", "reminders_menu")): # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        return "reminders", data

    # –ï—Å–ª–∏ callback_data –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ø–æ–≥–æ–¥–µ, –ø–µ—Ä–µ–¥–∞—ë–º –≤ weather_handler
    if data.startswith(("weather_", "weather_forecast_3days", "weather_by_location", "weather_back_to_main")): # <-- –î–û–ë–ê–í–õ–ï–ù–û
        return "weather", data

    elif data == 'main_menu':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∏ —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        return "main_menu", ("–ì–ªa–≤–Ω–æ–µ –º–µ–Ω—é:", "main_keyboard")

    return None, None # –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ base_handler

def handle_message_input(message, user_states, user_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—è –ø–æ –º–æ–¥—É–ª—è–º."""
    text = message.get("text", "")
    chat_id = message["chat"]["id"]
    # user_id = message["from"]["id"] # <-- –£–ë–†–ê–ù–û, —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç

    # --- –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏–µ–º reply-–∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ---
    if text in ["üìù –ó–∞–º–µ—Ç–∫–∏", "‚úÖ –ó–∞–¥–∞—á–∏", "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", "üå§Ô∏è –ü–æ–≥–æ–¥–∞", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]: # <-- "‚úÖ –ó–∞–¥–∞—á–∏", "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è", "üå§Ô∏è –ü–æ–≥–æ–¥–∞" –¥–æ–±–∞–≤–ª–µ–Ω—ã
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ base_handler
        text_to_send, keyboard_type = handle_main_menu_reply(chat_id, user_id, text, user_states)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–∏–ø –º–µ–Ω—é –∏ (text, keyboard_type)
        if text_to_send is not None:
            return "main_reply", (text_to_send, keyboard_type)
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None
            return None, None

    # --- –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ ---
    current_state = user_states.get((user_id, chat_id))
    if current_state and current_state.startswith("waiting_for_note_"):
        # –ü–µ—Ä–µ–¥–∞—ë–º –≤ notes_handler
        return "notes", text
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∑–∞–¥–∞—á
    if current_state and current_state.startswith("waiting_for_task_"): # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        # –ü–µ—Ä–µ–¥–∞—ë–º –≤ tasks_handler
        return "tasks", text
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    if current_state and current_state.startswith("waiting_for_reminder_"): # <-- –î–æ–±–∞–≤–ª–µ–Ω–æ
        # –ü–µ—Ä–µ–¥–∞—ë–º –≤ reminders_handler
        return "reminders", text
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –ø–æ–≥–æ–¥—ã (–µ—Å–ª–∏ –±—ã –±—ã–ª–∞ –ª–æ–≥–∏–∫–∞ –≤–≤–æ–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞)
    # if current_state and current_state.startswith("waiting_for_weather_"): # <-- (–ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
    #     # –ü–µ—Ä–µ–¥–∞—ë–º –≤ weather_handler
    #     return "weather", text

    # --- –ü–†–ò–û–†–ò–¢–ï–¢ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ---
    if text == "/start":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –∏ —Ç–∏–ø –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        return "start", ("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.", "main_keyboard")

    return None, None # –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ